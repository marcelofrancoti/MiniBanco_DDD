// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using  Cliente.Migrations;

#nullable disable

namespace  Cliente.Migrations.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241101160701_AddTabelas__03")]
    partial class AddTabelas__03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity(" Cliente.Domain.Entities.Banco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodigoBanco")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Banco");
                });

            modelBuilder.Entity(" Cliente.Domain.Entities.Cessionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<int>("IdAdministrador")
                        .HasColumnType("integer");

                    b.Property<int?>("IdBancoCustodiante")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Cessionario");
                });

            modelBuilder.Entity(" Cliente.Domain.Entities.ContaCorrente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Agencia")
                        .HasColumnType("integer")
                        .HasColumnName("agencia");

                    b.Property<int>("AgenciaDigito")
                        .HasColumnType("integer")
                        .HasColumnName("agencia_digito");

                    b.Property<int>("Conta")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inativacao");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<int>("IdBanco")
                        .HasColumnType("integer")
                        .HasColumnName("id_banco");

                    b.HasKey("Id");

                    b.ToTable("ContaCorrente");
                });

            modelBuilder.Entity(" Cliente.Domain.Entities.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CodigoKeycloak")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity(" Cliente.Domain.Entities.Operacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ContaCobranca")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<string>("Detalhe")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<int>("IdCessionario")
                        .HasColumnType("integer");

                    b.Property<int>("IdModalidadeOperacao")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Operacao");
                });

            modelBuilder.Entity(" Cliente.Domain.Entities.OperacaoCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Coobrigacao")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int>("IdOperacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OperacaoCedente");
                });

            modelBuilder.Entity(" Cliente.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodigoKeycloak")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("IdConfiguracaoPerfil")
                        .HasColumnType("integer");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity(" Cliente.Domain.Entities.UsuarioEmpresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_registro");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UsuarioEmpresa");
                });
#pragma warning restore 612, 618
        }
    }
}
